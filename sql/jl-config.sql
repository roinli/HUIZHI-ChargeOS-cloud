/*
 Navicat Premium Data Transfer

 Source Server         : jingli
 Source Server Type    : MySQL
 Source Server Version : 50616
 Source Host           : 127.0.0.1:3306
 Source Schema         : ry-config

 Target Server Type    : MySQL
 Target Server Version : 50616
 File Encoding         : 65001

 Date: 31/12/2023 00:52:58
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 91 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (10, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2023-05-11 23:43:57', '2023-05-11 23:43:57', NULL, '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '通用配置', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (19, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-auth/v3/api-docs\n      - /jingli-inter/v3/api-docs\n      - /jingli-system/v3/api-docs\n      - /jingli-inter/outer/**\n      - /jingli-auth/login\n      - /jingli-admin/**\n', 'f4d9410034b780c0b301d9670072b25e', '2023-05-11 23:48:25', '2023-12-24 15:09:38', 'nacos', '113.88.156.198', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '网关模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (21, 'jingli-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n', '262402a9e2dd374d2cec7cf72bd4a2f3', '2023-05-12 00:38:36', '2023-05-12 00:39:04', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '认证中心', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (23, 'jingli-system-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-05-12 00:41:33', '2023-05-12 00:43:22', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (25, 'jingli-job-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By jingli\n  licenseUrl: https://xxxx.com\n', '94437de4628effc9883002370d407a5f', '2023-05-12 00:45:06', '2023-05-12 00:46:53', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '定时任务', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (27, 'jingli-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/jingli/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://127.0.0.1\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 127.0.0.1:22122\n\n# Minio配置\nminio:\n  url: http://127.0.0.1:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '493e110cd75784a6365fc9ac92005c31', '2023-05-12 00:48:31', '2023-05-12 00:48:49', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '文件服务', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (29, 'jingli-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# 代码生成\ngen:\n  # 作者\n  author: jingli\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.jingli.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '63a5b73f2510b9b1d1e72647401a149c', '2023-05-12 00:50:30', '2023-05-12 00:52:06', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '代码生成', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (31, 'jingli-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: jingli\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '61cb9adc559c79cb83000c2917b153b1', '2023-05-12 00:53:59', '2023-05-12 00:54:13', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '监控中心', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (33, 'sentinel-jingli-gateway', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"jingli-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0abc6e6cf427345494addb73eed07d87', '2023-05-12 00:54:39', '2023-05-12 00:56:17', 'nacos', '127.0.0.1', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '限流策略', '', '', 'json', '', '');
INSERT INTO `config_info` VALUES (36, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '通用配置', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (37, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'bb702d291e2627a472e07d8e4ec6b6e8', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '网关模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (38, 'jingli-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n', '262402a9e2dd374d2cec7cf72bd4a2f3', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '认证中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (39, 'jingli-system-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '系统模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (40, 'jingli-job-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By jingli\n  licenseUrl: https://xxxx.com\n', '94437de4628effc9883002370d407a5f', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '定时任务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (41, 'jingli-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/jingli/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://127.0.0.1\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 127.0.0.1:22122\n\n# Minio配置\nminio:\n  url: http://127.0.0.1:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '493e110cd75784a6365fc9ac92005c31', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '文件服务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (43, 'jingli-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# 代码生成\ngen:\n  # 作者\n  author: jingli\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.jingli.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '63a5b73f2510b9b1d1e72647401a149c', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '代码生成', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (44, 'jingli-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: jingli\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '61cb9adc559c79cb83000c2917b153b1', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '监控中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (45, 'sentinel-jingli-gateway', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"jingli-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0abc6e6cf427345494addb73eed07d87', '2023-05-12 00:56:39', '2023-05-12 00:56:39', NULL, '127.0.0.1', '', '', '限流策略', NULL, NULL, 'json', NULL, '');
INSERT INTO `config_info` VALUES (46, 'application-sit.yml', 'DEFAULT_GROUP', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '通用配置', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (47, 'jingli-gateway-sit.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'bb702d291e2627a472e07d8e4ec6b6e8', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '网关模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (48, 'jingli-auth-sit.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n', '262402a9e2dd374d2cec7cf72bd4a2f3', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '认证中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (49, 'jingli-system-sit.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '系统模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (50, 'jingli-job-sit.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By jingli\n  licenseUrl: https://xxxx.com\n', '94437de4628effc9883002370d407a5f', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '定时任务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (51, 'jingli-file-sit.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/jingli/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://127.0.0.1\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 127.0.0.1:22122\n\n# Minio配置\nminio:\n  url: http://127.0.0.1:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '493e110cd75784a6365fc9ac92005c31', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '文件服务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (52, 'jingli-gen-sit.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# 代码生成\ngen:\n  # 作者\n  author: jingli\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.jingli.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '63a5b73f2510b9b1d1e72647401a149c', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '代码生成', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (53, 'jingli-monitor-sit.yml', 'DEFAULT_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: jingli\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '61cb9adc559c79cb83000c2917b153b1', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '监控中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (54, 'sentinel-jingli-gateway', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"jingli-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0abc6e6cf427345494addb73eed07d87', '2023-05-12 20:32:33', '2023-05-12 20:32:33', NULL, '113.88.156.26', '', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', '限流策略', NULL, NULL, 'json', NULL, '');
INSERT INTO `config_info` VALUES (55, 'application-dev.yml', 'ZFENOR_GROUP', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '通用配置', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (56, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /admin/**\n      - /system/**\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-admin/login\n      - /jingli-admin/login/**\n      - /jingli-admin/sysConfig/getInfoByKey\n      - /jingli-admin/**\n', '319e8ecc05562225d696a41ef2f2d13b', '2023-12-22 15:51:09', '2023-12-24 15:49:55', 'nacos', '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '网关模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (57, 'jingli-auth-dev.yml', 'ZFENOR_GROUP', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n', '262402a9e2dd374d2cec7cf72bd4a2f3', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '认证中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (58, 'jingli-system-dev.yml', 'ZFENOR_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (59, 'jingli-job-dev.yml', 'ZFENOR_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By jingli\n  licenseUrl: https://xxxx.com\n', '94437de4628effc9883002370d407a5f', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '定时任务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (60, 'jingli-file-dev.yml', 'ZFENOR_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/jingli/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://127.0.0.1\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 127.0.0.1:22122\n\n# Minio配置\nminio:\n  url: http://127.0.0.1:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '493e110cd75784a6365fc9ac92005c31', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '文件服务', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (61, 'jingli-gen-dev.yml', 'ZFENOR_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# 代码生成\ngen:\n  # 作者\n  author: jingli\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.jingli.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '63a5b73f2510b9b1d1e72647401a149c', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '代码生成', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (62, 'jingli-monitor-dev.yml', 'ZFENOR_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: jingli\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '61cb9adc559c79cb83000c2917b153b1', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '监控中心', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (63, 'sentinel-jingli-gateway', 'ZFENOR_GROUP', '[\n    {\n        \"resource\": \"jingli-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0abc6e6cf427345494addb73eed07d87', '2023-12-22 15:51:09', '2023-12-22 15:51:09', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '限流策略', NULL, NULL, 'json', NULL, '');
INSERT INTO `config_info` VALUES (64, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n    database: 13\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\nserver:\n  undertow:\n    accessors:\n      enabled: false\n      pattern: combined\n  servlet:\n    encoding:\n      charset: UTF-8\n      enabled: true\n      force: true\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', 'd60edf2506dc61bbb5cf0fd7e5cbcbb3', '2023-12-22 16:03:47', '2023-12-25 04:30:23', 'nacos', '61.138.232.34', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (66, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxe36b8934277efd6c\n      secret: 7dd31ab6939b410c8d965b138f5e7e56\npile:\n  id:\n    length: 14\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.inter.controller\n  default-flat-param-object: false', '86d2d1549df3a709da2b87a6f2579222', '2023-12-23 16:59:13', '2023-12-25 15:25:50', 'nacos', '113.88.156.198', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (89, 'jingli-inter-dev.yml', 'ZFENOR_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxe36b8934277efd6c\n      secret: 7dd31ab6939b410c8d965b138f5e7e56\npile:\n  id:\n    length: 14\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.inter.controller\n  default-flat-param-object: false', '86d2d1549df3a709da2b87a6f2579222', '2023-12-29 15:02:55', '2023-12-29 15:02:55', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (90, 'jingli-admin-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n    database: 13\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\nserver:\n  undertow:\n    accessors:\n      enabled: false\n      pattern: combined\n  servlet:\n    encoding:\n      charset: UTF-8\n      enabled: true\n      force: true\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', 'd60edf2506dc61bbb5cf0fd7e5cbcbb3', '2023-12-29 17:40:33', '2023-12-29 17:40:33', NULL, '112.43.2.250', '', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '系统模块', NULL, NULL, 'yaml', NULL, '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 97 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 61, 'application-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 62, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'bb702d291e2627a472e07d8e4ec6b6e8', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 63, 'jingli-auth-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n', '262402a9e2dd374d2cec7cf72bd4a2f3', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 64, 'jingli-system-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 65, 'jingli-job-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By jingli\n  licenseUrl: https://xxxx.com\n', '94437de4628effc9883002370d407a5f', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 66, 'jingli-file-dev.yml', 'ZFENOR_GROUP', '', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/jingli/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://127.0.0.1\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 127.0.0.1:22122\n\n# Minio配置\nminio:\n  url: http://127.0.0.1:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '493e110cd75784a6365fc9ac92005c31', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 67, 'jingli-gen-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n    username: hotcar\n    password: as025996\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# 代码生成\ngen:\n  # 作者\n  author: jingli\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.jingli.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '63a5b73f2510b9b1d1e72647401a149c', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 68, 'jingli-monitor-dev.yml', 'ZFENOR_GROUP', '', '# spring\nspring:\n  security:\n    user:\n      name: jingli\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 若依服务状态监控\n', '61cb9adc559c79cb83000c2917b153b1', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 69, 'sentinel-jingli-gateway', 'ZFENOR_GROUP', '', '[\n    {\n        \"resource\": \"jingli-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"jingli-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '0abc6e6cf427345494addb73eed07d87', '2023-12-22 23:51:08', '2023-12-22 15:51:09', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 70, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-23 00:03:47', '2023-12-22 16:03:47', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 71, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-23 00:06:41', '2023-12-22 16:06:41', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 72, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-24 00:59:13', '2023-12-23 16:59:13', NULL, '113.88.158.95', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (66, 73, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'aa841789d4d9552f3f92463e3c1493f2', '2023-12-24 01:08:47', '2023-12-23 17:08:47', 'nacos', '113.88.158.95', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (66, 74, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'b3e01abc3dd49e8a90c3679b66ce4ae8', '2023-12-24 01:13:41', '2023-12-23 17:13:42', 'nacos', '113.88.158.95', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (66, 75, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxfa4d4b4d79037834\n      secret: cd89d566cf65ad9633ff58d7566c52c6\npile:\n  id:\n    length: 14\n\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', '5a060abeb4da9ddbdc9e267162e98de5', '2023-12-24 01:23:29', '2023-12-23 17:23:29', 'nacos', '113.88.158.95', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (19, 76, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'bb702d291e2627a472e07d8e4ec6b6e8', '2023-12-24 19:48:25', '2023-12-24 11:48:25', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (19, 77, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-auth/v3/api-docs\n', '669f7c477b5e65b8bb2edc48f9f7d1ee', '2023-12-24 19:54:21', '2023-12-24 11:54:21', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (19, 78, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-auth/v3/api-docs\n      - /jingli-inter/v3/api-docs\n      - /jingli-system/v3/api-docs\n', 'a65475536f60c19a9b85ca475d9757ee', '2023-12-24 20:00:43', '2023-12-24 12:00:43', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (19, 79, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-auth/v3/api-docs\n      - /jingli-inter/v3/api-docs\n      - /jingli-system/v3/api-docs\n      - /jingli-inter/outer/**\n', '3003ad91c01229ec7294e9c42f61e1d8', '2023-12-24 20:02:19', '2023-12-24 12:02:20', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 80, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    database: 13\n    host: 127.0.0.1\n    jedis:\n      pool:\n        max-active: -1\n        max-idle: 8\n        max-wait: 10000ms\n        min-idle: 0\n    password: root \n    port: 6379\n    timeout: 10000\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', 'f5b0610956a02a985630a01c6b4c35ca', '2023-12-24 21:34:46', '2023-12-24 13:34:46', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (66, 81, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxfa4d4b4d79037834\n      secret: cd89d566cf65ad9633ff58d7566c52c6\npile:\n  id:\n    length: 14\n\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com', '52d74c16862e67d9d605e38f97d79513', '2023-12-24 21:43:53', '2023-12-24 13:43:53', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 82, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    database: 13\n    host: 127.0.0.1\n    jedis:\n      pool:\n        max-active: -1\n        max-idle: 8\n        max-wait: 10000ms\n        min-idle: 0\n    password: root \n    port: 6379\n    timeout: 10000\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk', '0538b314e26f55744c74ac655527dd56', '2023-12-24 22:17:00', '2023-12-24 14:17:00', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (56, 83, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'bb702d291e2627a472e07d8e4ec6b6e8', '2023-12-24 23:04:00', '2023-12-24 15:04:01', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (56, 84, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-admin/login/**\n      - /jingli-admin/sysConfig/getInfoByKey\n', '4ad05777673983ee78f5907e376f9d61', '2023-12-24 23:08:00', '2023-12-24 15:08:00', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (19, 85, 'jingli-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-auth/v3/api-docs\n      - /jingli-inter/v3/api-docs\n      - /jingli-system/v3/api-docs\n      - /jingli-inter/outer/**\n      - /jingli-auth/login\n', 'e8d0b6891372a0c30cd5d74115062479', '2023-12-24 23:09:38', '2023-12-24 15:09:38', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (56, 86, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-admin/login\n      - /jingli-admin/login/**\n      - /jingli-admin/sysConfig/getInfoByKey\n', '31eec7ce7a600a277dd07b981815811e', '2023-12-24 23:09:54', '2023-12-24 15:09:55', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (56, 87, 'jingli-gateway-dev.yml', 'ZFENOR_GROUP', '', 'spring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: jingli-auth\n          uri: lb://jingli-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: jingli-gen\n          uri: lb://jingli-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: jingli-job\n          uri: lb://ruojingliyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: jingli-system\n          uri: lb://jingli-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: jingli-file\n          uri: lb://jingli-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /jingli-admin/login\n      - /jingli-admin/login/**\n      - /jingli-admin/sysConfig/getInfoByKey\n      - /jingli-admin/**\n', 'ba7a0860e8bb0a09accac78a522728bd', '2023-12-24 23:49:55', '2023-12-24 15:49:55', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 88, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    database: 13\n    host: 127.0.0.1\n    jedis:\n      pool:\n        max-active: -1\n        max-idle: 8\n        max-wait: 10000ms\n        min-idle: 0\n    password: root \n    port: 6379\n    timeout: 10000\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.jingli.admin\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.inter.controller\n  default-flat-param-object: false', 'de6145bcdad42268bf523548a487dc70', '2023-12-25 00:47:58', '2023-12-24 16:47:59', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 89, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    database: 13\n    host: 127.0.0.1\n    jedis:\n      pool:\n        max-active: -1\n        max-idle: 8\n        max-wait: 10000ms\n        min-idle: 0\n    password: root \n    port: 6379\n    timeout: 10000\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.admin\n\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', '547d4f376600d6d0d7bdb538ee907cd0', '2023-12-25 01:09:02', '2023-12-24 17:09:02', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 90, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    database: 13\n    host: 127.0.0.1\n    jedis:\n      pool:\n        max-active: -1\n        max-idle: 8\n        max-wait: 10000ms\n        min-idle: 0\n    password: root \n    port: 6379\n    timeout: 10000\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', '3dc910694f1e8dd90315c142fe87aa5f', '2023-12-25 01:40:07', '2023-12-24 17:40:07', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 91, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    password: root \n    port: 6379\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', '6c7081c241148b098facd864822b9fea', '2023-12-25 01:42:12', '2023-12-24 17:42:12', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 92, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', 'cb3c6781d4ddeafeb759fbc13c99ec30', '2023-12-25 02:46:07', '2023-12-24 18:46:08', 'nacos', '112.43.2.250', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (64, 93, 'jingli-admin-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n    database: 13\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', '8e0cf8585c2fac35a34807ad3dec8bb2', '2023-12-25 12:30:22', '2023-12-25 04:30:23', 'nacos', '61.138.232.34', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (66, 94, 'jingli-inter-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxe36b8934277efd6c\n      secret: 17ea70d5e3a7566f677da508ca58d875\npile:\n  id:\n    length: 14\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.inter.controller\n  default-flat-param-object: false', '26753e02f9d3776f900ba972e5131e46', '2023-12-25 23:25:50', '2023-12-25 15:25:50', 'nacos', '113.88.156.198', 'U', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 95, 'jingli-inter-dev.yml', 'ZFENOR_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n    map-underscore-to-camel-case: false\n  mapper-locations: /mapper/*.xml\n  type-aliases-package: com.jingli.inter\n\nwx:\n  miniapp:\n    configs[0]:\n      appid: wxe36b8934277efd6c\n      secret: 7dd31ab6939b410c8d965b138f5e7e56\npile:\n  id:\n    length: 14\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.inter.controller\n  default-flat-param-object: false', '86d2d1549df3a709da2b87a6f2579222', '2023-12-29 23:02:54', '2023-12-29 15:02:55', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');
INSERT INTO `his_config_info` VALUES (0, 96, 'jingli-admin-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    password: root \n    database: 13\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://127.0.0.1:3306/jl-cloud?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai\n            username: hotcar\n            password: as025996\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# # mybatis配置\n# mybatis:\n#     # 搜索指定包别名\n#     typeAliasesPackage: com.jingli.admin\n#     # 配置mapper的扫描，找到所有的mapper.xml映射文件\n#     mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By jingli\n  licenseUrl: https:/.nxptdn.com\n\n# token配置\nremote:\n  expireSeconds: 86200\n  prefix: tk\n\nserver:\n  undertow:\n    accessors:\n      enabled: false\n      pattern: combined\n  servlet:\n    encoding:\n      charset: UTF-8\n      enabled: true\n      force: true\n\n# mybatis-plus:\n#   configuration:\n#     log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n#     map-underscore-to-camel-case: false\n#   mapper-locations: /mapper/*.xml\n#   type-aliases-package: com.jingli.admin\n# mybatis-plus配置\nmybatis-plus:\n  configuration:\n    # 返回类型伟map时空值字段显示\n    call-setters-on-nulls: true\n  global-config:\n    db-config:\n      # 字段下划线\n      column-like: true\n      # ID类型\n      id-type: auto\n      # 表前缀\n      table-prefix: c_\n  mapper-locations: classpath*:mapper/*.xml\n  type-aliases-package: com.jingli.admin.*.*.model\n\n\nspringdoc:\n  swagger-ui:\n    path: /swagger-ui.html\n    tags-sorter: alpha\n    operations-sorter: alpha\n    show-extensions: true\n  api-docs:\n    path: /v3/api-docs\n  group-configs:\n    - group: \'default\'\n      paths-to-match: \'/**\'\n      packages-to-scan: com.jingli.admin.controller\n  default-flat-param-object: false', 'd60edf2506dc61bbb5cf0fd7e5cbcbb3', '2023-12-30 01:40:33', '2023-12-29 17:40:33', NULL, '112.43.2.250', 'I', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', '');

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Compact;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', '6b4d8a21-b62a-40b3-bd76-ee4c72b0a470', 'dev', '开发环境', 'nacos', 1683819804197, 1683819804197);
INSERT INTO `tenant_info` VALUES (2, '1', '7ce7fb3a-08e3-4f72-957e-8175a62d5975', 'sit', '测试环境', 'nacos', 1683819812697, 1683819812697);
INSERT INTO `tenant_info` VALUES (3, '1', 'c6d5d033-15a3-4965-ac62-edcc9757b2d3', 'prod', '生产环境', 'nacos', 1683819821791, 1683819821791);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Compact;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$Vbfnm0dwkELS66Uq7uhkjuwpZmynnGv2vvmUEsf9f0Jq0QOS00CZ2', 1);

SET FOREIGN_KEY_CHECKS = 1;
